// <auto-generated />
using System;
using InventoryTrackApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryTrackApi.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryMouvementProduct", b =>
                {
                    b.Property<int>("InventoryMouvementsInventoryMouvementId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.HasKey("InventoryMouvementsInventoryMouvementId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("InventoryMouvementProduct");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashRegister", b =>
                {
                    b.Property<int>("CashRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashRegisterId"));

                    b.Property<int?>("CashRegisterId1")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashRegisterId");

                    b.HasIndex("CashRegisterId1");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LocationId");

                    b.ToTable("CashRegisters");

                    b.HasData(
                        new
                        {
                            CashRegisterId = 1,
                            EmployeeId = 1,
                            IsActive = true,
                            LocationId = 1,
                            Name = "Main Register"
                        },
                        new
                        {
                            CashRegisterId = 2,
                            EmployeeId = 2,
                            IsActive = true,
                            LocationId = 2,
                            Name = "Secondary Register"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashShift", b =>
                {
                    b.Property<int>("CashShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashShiftId"));

                    b.Property<decimal>("CashIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShiftEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalRefunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CashShiftId");

                    b.HasIndex("CashRegisterId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CashShifts");

                    b.HasData(
                        new
                        {
                            CashShiftId = 1,
                            CashIn = 200m,
                            CashOut = 100m,
                            CashRegisterId = 1,
                            ClosingBalance = 1200m,
                            EmployeeId = 1,
                            OpeningBalance = 1000m,
                            ShiftDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShiftStart = new DateTime(2025, 1, 2, 23, 27, 46, 934, DateTimeKind.Utc).AddTicks(3763),
                            TotalRefunds = 100m,
                            TotalSales = 1500m
                        },
                        new
                        {
                            CashShiftId = 2,
                            CashIn = 300m,
                            CashOut = 50m,
                            CashRegisterId = 2,
                            ClosingBalance = 1300m,
                            EmployeeId = 2,
                            OpeningBalance = 1100m,
                            ShiftDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShiftStart = new DateTime(2025, 1, 3, 23, 27, 46, 934, DateTimeKind.Utc).AddTicks(7034),
                            TotalRefunds = 200m,
                            TotalSales = 1600m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashTransaction", b =>
                {
                    b.Property<int>("CashTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashTransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CashShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashTransactionId");

                    b.HasIndex("CashShiftId");

                    b.ToTable("CashTransactions");

                    b.HasData(
                        new
                        {
                            CashTransactionId = 1,
                            Amount = 150.00m,
                            CashShiftId = 1,
                            Description = "Product Sale Transaction",
                            TransactionTime = new DateTime(2025, 1, 2, 23, 27, 46, 935, DateTimeKind.Utc).AddTicks(469),
                            TransactionType = "Sale"
                        },
                        new
                        {
                            CashTransactionId = 2,
                            Amount = -20.00m,
                            CashShiftId = 1,
                            Description = "Refund for Product X",
                            TransactionTime = new DateTime(2025, 1, 2, 22, 57, 46, 935, DateTimeKind.Utc).AddTicks(1220),
                            TransactionType = "Refund"
                        },
                        new
                        {
                            CashTransactionId = 3,
                            Amount = 500.00m,
                            CashShiftId = 2,
                            Description = "Deposit of additional cash",
                            TransactionTime = new DateTime(2025, 1, 2, 22, 27, 46, 935, DateTimeKind.Utc).AddTicks(1244),
                            TransactionType = "Cash Deposit"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Groceries"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Books"
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "Sacs"
                        },
                        new
                        {
                            CategoryId = 7,
                            Name = "Data"
                        },
                        new
                        {
                            CategoryId = 8,
                            Name = "Bread"
                        },
                        new
                        {
                            CategoryId = 9,
                            Name = "Jacket"
                        },
                        new
                        {
                            CategoryId = 10,
                            Name = "T-Shirts"
                        },
                        new
                        {
                            CategoryId = 11,
                            Name = "Jeans"
                        },
                        new
                        {
                            CategoryId = 12,
                            Name = "Mobile"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivate")
                        .HasColumnType("bit");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            AccountBalance = 200m,
                            Adresse = "123 Main Street",
                            City = "Metropolis",
                            CreatedBy = "Admin",
                            CreditLimit = 1500m,
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 933, DateTimeKind.Local).AddTicks(6574),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 933, DateTimeKind.Local).AddTicks(7261),
                            Email = "john.doe@example.com",
                            IsActivate = true,
                            Land = "USA",
                            ModifiedBy = "Admin",
                            Name = "John Doe",
                            PhoneNumber1 = "1234567890",
                            PhoneNumber2 = "0987654321"
                        },
                        new
                        {
                            CustomerId = 2,
                            AccountBalance = 0m,
                            Adresse = "456 Elm Street",
                            City = "Gotham",
                            CreatedBy = "Admin",
                            CreditLimit = 2000m,
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 933, DateTimeKind.Local).AddTicks(8400),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 933, DateTimeKind.Local).AddTicks(8405),
                            Email = "jane.smith@example.com",
                            IsActivate = true,
                            Land = "USA",
                            ModifiedBy = "Admin",
                            Name = "Jane Smith",
                            PhoneNumber1 = "5551234567",
                            PhoneNumber2 = "5557654321"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            PasswordHash = "Admin@123",
                            Phone = "123456789",
                            Role = "Administrator"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PasswordHash = "Password@123",
                            Phone = "987654321",
                            Role = "Cashier"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PasswordHash = "Manager@123",
                            Phone = "1122334455",
                            Role = "Manager"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InventoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 935, DateTimeKind.Local).AddTicks(3778),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 935, DateTimeKind.Local).AddTicks(4365),
                            LocationId = 1,
                            ModifiedBy = "Admin",
                            ProductId = 1,
                            Quantity = 50m
                        },
                        new
                        {
                            InventoryId = 2,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 935, DateTimeKind.Local).AddTicks(5367),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 935, DateTimeKind.Local).AddTicks(5371),
                            LocationId = 2,
                            ModifiedBy = "Admin",
                            ProductId = 2,
                            Quantity = 20m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.InventoryMouvement", b =>
                {
                    b.Property<int>("InventoryMouvementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryMouvementId"));

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MouvementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MouvementType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InventoryMouvementId");

                    b.HasIndex("LocationId");

                    b.ToTable("InventoryMouvements");

                    b.HasData(
                        new
                        {
                            InventoryMouvementId = 1,
                            LocationId = 1,
                            MouvementDate = new DateTime(2025, 1, 3, 0, 27, 46, 935, DateTimeKind.Local).AddTicks(7757),
                            MouvementType = "Purchase",
                            ProductId = 1,
                            Quantity = 100m
                        },
                        new
                        {
                            InventoryMouvementId = 2,
                            LocationId = 1,
                            MouvementDate = new DateTime(2025, 1, 3, 0, 27, 46, 935, DateTimeKind.Local).AddTicks(8306),
                            MouvementType = "Sale",
                            ProductId = 1,
                            Quantity = 10m
                        },
                        new
                        {
                            InventoryMouvementId = 3,
                            LocationId = 1,
                            MouvementDate = new DateTime(2025, 1, 3, 0, 27, 46, 935, DateTimeKind.Local).AddTicks(8358),
                            MouvementType = "Return",
                            ProductId = 1,
                            Quantity = 10m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1,
                            Name = "Electronics Line"
                        },
                        new
                        {
                            LineId = 2,
                            Name = "Clothing Line"
                        },
                        new
                        {
                            LineId = 3,
                            Name = "Grocery Line"
                        },
                        new
                        {
                            LineId = 4,
                            Name = "Furniture Line"
                        },
                        new
                        {
                            LineId = 5,
                            Name = "Toys Line"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("LocationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Adresse = "123 Main Street",
                            City = "Metropolis",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 932, DateTimeKind.Local).AddTicks(2363),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 932, DateTimeKind.Local).AddTicks(2891),
                            Email = "headoffice@example.com",
                            IsActivated = true,
                            Land = "Country A",
                            ModifiedBy = "Admin",
                            Name = "Head Office",
                            PhoneNumber1 = "123456789",
                            PhoneNumber2 = "987654321"
                        },
                        new
                        {
                            LocationId = 2,
                            Adresse = "456 Side Street",
                            City = "Gotham",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 932, DateTimeKind.Local).AddTicks(3421),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 932, DateTimeKind.Local).AddTicks(3423),
                            Email = "branchoffice@example.com",
                            IsActivated = true,
                            Land = "Country B",
                            ModifiedBy = "Admin",
                            Name = "Branch Office",
                            PhoneNumber1 = "1122334455",
                            PhoneNumber2 = "5566778899"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBuyThreeForFiveEligible")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecondItemDiscountEligible")
                        .HasColumnType("bit");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PackUnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityPack")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShelfId")
                        .HasColumnType("int");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("Barcode")
                        .IsUnique();

                    b.HasIndex("CategoryId");

                    b.HasIndex("LineId");

                    b.HasIndex("ShelfId");

                    b.HasIndex("TaxId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Barcode = "1234567890123",
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 931, DateTimeKind.Local).AddTicks(6733),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 931, DateTimeKind.Local).AddTicks(7263),
                            DiscountPercentage = 0m,
                            ImageUrl = "https://example.com/productA.jpg",
                            IsActivate = true,
                            IsBuyThreeForFiveEligible = false,
                            IsSecondItemDiscountEligible = false,
                            LineId = 1,
                            MaxStock = 100m,
                            MinStock = 10m,
                            ModifiedBy = "Admin",
                            Name = "Product A",
                            PackUnitType = "Box",
                            ProductUnitId = 1,
                            PurchasePrice = 100.00m,
                            QuantityPack = 1m,
                            QuantityStock = 50m,
                            SalePrice1 = 150.00m,
                            SalePrice2 = 160.00m,
                            SalePrice3 = 170.00m,
                            ShelfId = 1,
                            TaxId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            Barcode = "2234567890123",
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 931, DateTimeKind.Local).AddTicks(8914),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 931, DateTimeKind.Local).AddTicks(8917),
                            DiscountPercentage = 0m,
                            ImageUrl = "https://example.com/productB.jpg",
                            IsActivate = true,
                            IsBuyThreeForFiveEligible = false,
                            IsSecondItemDiscountEligible = false,
                            LineId = 2,
                            MaxStock = 5m,
                            MinStock = 5m,
                            ModifiedBy = "Admin",
                            Name = "Product B",
                            PackUnitType = "Piece",
                            ProductUnitId = 2,
                            PurchasePrice = 50.00m,
                            QuantityPack = 1m,
                            QuantityStock = 30m,
                            SalePrice1 = 70.00m,
                            SalePrice2 = 75.00m,
                            SalePrice3 = 80.00m,
                            ShelfId = 2,
                            TaxId = 2,
                            UnitId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            Barcode = "3234567890123",
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 931, DateTimeKind.Local).AddTicks(8960),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 931, DateTimeKind.Local).AddTicks(8963),
                            DiscountPercentage = 0m,
                            ImageUrl = "https://example.com/productC.jpg",
                            IsActivate = true,
                            IsBuyThreeForFiveEligible = false,
                            IsSecondItemDiscountEligible = false,
                            LineId = 3,
                            MaxStock = 5m,
                            MinStock = 5m,
                            ModifiedBy = "Admin",
                            Name = "Product C",
                            PackUnitType = "Piece",
                            ProductUnitId = 3,
                            PurchasePrice = 200.00m,
                            QuantityPack = 1m,
                            QuantityStock = 60m,
                            SalePrice1 = 250.00m,
                            SalePrice2 = 260.00m,
                            SalePrice3 = 270.00m,
                            ShelfId = 3,
                            TaxId = 3,
                            UnitId = 3
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ProductBatch", b =>
                {
                    b.Property<int>("ProductBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductBatchId"));

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductBatchId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBatchs");

                    b.HasData(
                        new
                        {
                            ProductBatchId = 1,
                            BatchNumber = "BATCH001",
                            ExpirationDate = new DateTime(2025, 7, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(877),
                            ProductId = 1,
                            Quantity = 100m,
                            ReceivedDate = new DateTime(2024, 12, 23, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(1420)
                        },
                        new
                        {
                            ProductBatchId = 2,
                            BatchNumber = "BATCH002",
                            ExpirationDate = new DateTime(2026, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(1993),
                            ProductId = 2,
                            Quantity = 200m,
                            ReceivedDate = new DateTime(2024, 12, 13, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(1995)
                        },
                        new
                        {
                            ProductBatchId = 3,
                            BatchNumber = "BATCH003",
                            ProductId = 1,
                            Quantity = 50m,
                            ReceivedDate = new DateTime(2024, 12, 28, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(1999)
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TvaAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            PurchaseId = 1,
                            AmountPaid = 300.00m,
                            EmployeeId = 1,
                            PurchaseDate = new DateTime(2024, 12, 23, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(3495),
                            SupplierId = 1,
                            TotalAmount = 550.00m,
                            TvaAmount = 50.00m
                        },
                        new
                        {
                            PurchaseId = 2,
                            AmountPaid = 750.00m,
                            EmployeeId = 2,
                            PurchaseDate = new DateTime(2024, 12, 28, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5868),
                            SupplierId = 2,
                            TotalAmount = 750.00m,
                            TvaAmount = 75.00m
                        },
                        new
                        {
                            PurchaseId = 3,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5874),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            PurchaseId = 4,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5879),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            PurchaseId = 5,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5882),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            PurchaseId = 6,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5933),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            PurchaseId = 7,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5937),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            PurchaseId = 8,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5941),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            PurchaseId = 9,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5945),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            PurchaseId = 10,
                            AmountPaid = 150.00m,
                            EmployeeId = 3,
                            PurchaseDate = new DateTime(2025, 1, 2, 23, 27, 46, 936, DateTimeKind.Utc).AddTicks(5948),
                            SupplierId = 1,
                            TotalAmount = 325.00m,
                            TvaAmount = 25.00m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchaseItem", b =>
                {
                    b.Property<int>("PurchaseItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseItemId"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseItems");

                    b.HasData(
                        new
                        {
                            PurchaseItemId = 1,
                            Discount = 2.00m,
                            Price = 20.00m,
                            ProductId = 1,
                            PurchaseId = 1,
                            Quantity = 10m,
                            TaxAmount = 1.80m,
                            Total = 199.80m
                        },
                        new
                        {
                            PurchaseItemId = 2,
                            Discount = 0m,
                            Price = 50.00m,
                            ProductId = 2,
                            PurchaseId = 1,
                            Quantity = 5m,
                            TaxAmount = 5.00m,
                            Total = 255.00m
                        },
                        new
                        {
                            PurchaseItemId = 3,
                            Discount = 5.00m,
                            Price = 15.00m,
                            ProductId = 3,
                            PurchaseId = 2,
                            Quantity = 20m,
                            TaxAmount = 4.50m,
                            Total = 299.50m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchasePayment", b =>
                {
                    b.Property<int>("PurchasePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchasePaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.HasKey("PurchasePaymentId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("purchasePayments");

                    b.HasData(
                        new
                        {
                            PurchasePaymentId = 1,
                            Amount = 500.00m,
                            PaymentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "CreditCard",
                            PurchaseId = 1
                        },
                        new
                        {
                            PurchasePaymentId = 2,
                            Amount = 750.00m,
                            PaymentDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "Cash",
                            PurchaseId = 2
                        },
                        new
                        {
                            PurchasePaymentId = 3,
                            Amount = 1000.00m,
                            PaymentDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "BankTransfer",
                            PurchaseId = 3
                        },
                        new
                        {
                            PurchasePaymentId = 4,
                            Amount = 1250.00m,
                            PaymentDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "CreditCard",
                            PurchaseId = 4
                        },
                        new
                        {
                            PurchasePaymentId = 5,
                            Amount = 1500.00m,
                            PaymentDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "Cash",
                            PurchaseId = 5
                        },
                        new
                        {
                            PurchasePaymentId = 6,
                            Amount = 1750.00m,
                            PaymentDate = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "BankTransfer",
                            PurchaseId = 6
                        },
                        new
                        {
                            PurchasePaymentId = 7,
                            Amount = 2000.00m,
                            PaymentDate = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "CreditCard",
                            PurchaseId = 7
                        },
                        new
                        {
                            PurchasePaymentId = 8,
                            Amount = 2250.00m,
                            PaymentDate = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "Cash",
                            PurchaseId = 8
                        },
                        new
                        {
                            PurchasePaymentId = 9,
                            Amount = 2500.00m,
                            PaymentDate = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "BankTransfer",
                            PurchaseId = 9
                        },
                        new
                        {
                            PurchasePaymentId = 10,
                            Amount = 2750.00m,
                            PaymentDate = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentType = "CreditCard",
                            PurchaseId = 10
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TvaAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            AmountPaid = 100.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 120.00m,
                            TvaAmount = 20.00m
                        },
                        new
                        {
                            SaleId = 2,
                            AmountPaid = 120.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 150.00m,
                            TvaAmount = 30.00m
                        },
                        new
                        {
                            SaleId = 3,
                            AmountPaid = 150.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 200.00m,
                            TvaAmount = 25.00m
                        },
                        new
                        {
                            SaleId = 4,
                            AmountPaid = 50.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 100.00m,
                            TvaAmount = 15.00m
                        },
                        new
                        {
                            SaleId = 5,
                            AmountPaid = 200.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 300.00m,
                            TvaAmount = 50.00m
                        },
                        new
                        {
                            SaleId = 6,
                            AmountPaid = 30.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 50.00m,
                            TvaAmount = 10.00m
                        },
                        new
                        {
                            SaleId = 7,
                            AmountPaid = 180.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 250.00m,
                            TvaAmount = 40.00m
                        },
                        new
                        {
                            SaleId = 8,
                            AmountPaid = 200.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 220.00m,
                            TvaAmount = 35.00m
                        },
                        new
                        {
                            SaleId = 9,
                            AmountPaid = 230.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 270.00m,
                            TvaAmount = 45.00m
                        },
                        new
                        {
                            SaleId = 10,
                            AmountPaid = 300.00m,
                            CustomerId = 1,
                            DiscountPercentage = 0m,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 320.00m,
                            TvaAmount = 60.00m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SaleItem", b =>
                {
                    b.Property<int>("SaleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleItemId"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaleItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.HasIndex("TaxId");

                    b.ToTable("SaleItems");

                    b.HasData(
                        new
                        {
                            SaleItemId = 1,
                            Discount = 5.00m,
                            Price = 50.00m,
                            ProductId = 1,
                            Quantity = 2m,
                            SaleId = 1,
                            TaxAmount = 2.50m,
                            Total = 97.50m
                        },
                        new
                        {
                            SaleItemId = 2,
                            Discount = 10.00m,
                            Price = 100.00m,
                            ProductId = 1,
                            Quantity = 1m,
                            SaleId = 1,
                            TaxAmount = 5.00m,
                            Total = 95.00m
                        },
                        new
                        {
                            SaleItemId = 3,
                            Discount = 0.00m,
                            Price = 30.00m,
                            ProductId = 2,
                            Quantity = 3m,
                            SaleId = 2,
                            TaxAmount = 4.50m,
                            Total = 94.50m
                        },
                        new
                        {
                            SaleItemId = 4,
                            Discount = 10.00m,
                            Price = 20.00m,
                            ProductId = 2,
                            Quantity = 5m,
                            SaleId = 2,
                            TaxAmount = 2.00m,
                            Total = 92.00m
                        },
                        new
                        {
                            SaleItemId = 5,
                            Discount = 20.00m,
                            Price = 200.00m,
                            ProductId = 1,
                            Quantity = 1m,
                            SaleId = 3,
                            TaxAmount = 10.00m,
                            Total = 190.00m
                        },
                        new
                        {
                            SaleItemId = 6,
                            Discount = 15.00m,
                            Price = 150.00m,
                            ProductId = 1,
                            Quantity = 2m,
                            SaleId = 3,
                            TaxAmount = 12.00m,
                            Total = 297.00m
                        },
                        new
                        {
                            SaleItemId = 7,
                            Discount = 5.00m,
                            Price = 25.00m,
                            ProductId = 1,
                            Quantity = 4m,
                            SaleId = 4,
                            TaxAmount = 5.00m,
                            Total = 105.00m
                        },
                        new
                        {
                            SaleItemId = 8,
                            Discount = 0.00m,
                            Price = 10.00m,
                            ProductId = 1,
                            Quantity = 6m,
                            SaleId = 4,
                            TaxAmount = 3.00m,
                            Total = 63.00m
                        },
                        new
                        {
                            SaleItemId = 9,
                            Discount = 10.00m,
                            Price = 15.00m,
                            ProductId = 1,
                            Quantity = 10m,
                            SaleId = 5,
                            TaxAmount = 5.00m,
                            Total = 150.00m
                        },
                        new
                        {
                            SaleItemId = 10,
                            Discount = 20.00m,
                            Price = 300.00m,
                            ProductId = 1,
                            Quantity = 1m,
                            SaleId = 5,
                            TaxAmount = 15.00m,
                            Total = 295.00m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SalePayment", b =>
                {
                    b.Property<int>("SalePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalePaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("SalePaymentId");

                    b.HasIndex("SaleId");

                    b.ToTable("SalePayments");

                    b.HasData(
                        new
                        {
                            SalePaymentId = 1,
                            Amount = 100.00m,
                            PaymentDate = new DateTime(2024, 12, 23, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(3576),
                            PaymentType = "CASH",
                            SaleId = 1
                        },
                        new
                        {
                            SalePaymentId = 2,
                            Amount = 50.00m,
                            PaymentDate = new DateTime(2024, 12, 28, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(4984),
                            PaymentType = "PARTIAL_PAYMENT",
                            SaleId = 1
                        },
                        new
                        {
                            SalePaymentId = 3,
                            Amount = 200.00m,
                            PaymentDate = new DateTime(2024, 12, 26, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(4988),
                            PaymentType = "CREDIT",
                            SaleId = 2
                        },
                        new
                        {
                            SalePaymentId = 4,
                            Amount = 100.00m,
                            PaymentDate = new DateTime(2024, 12, 30, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(4991),
                            PaymentType = "CASH",
                            SaleId = 2
                        },
                        new
                        {
                            SalePaymentId = 5,
                            Amount = 300.00m,
                            PaymentDate = new DateTime(2024, 12, 31, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(4993),
                            PaymentType = "CASH",
                            SaleId = 3
                        },
                        new
                        {
                            SalePaymentId = 6,
                            Amount = 150.00m,
                            PaymentDate = new DateTime(2025, 1, 1, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(4994),
                            PaymentType = "PARTIAL_PAYMENT",
                            SaleId = 3
                        },
                        new
                        {
                            SalePaymentId = 7,
                            Amount = 120.00m,
                            PaymentDate = new DateTime(2024, 12, 18, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(4996),
                            PaymentType = "CREDIT",
                            SaleId = 4
                        },
                        new
                        {
                            SalePaymentId = 8,
                            Amount = 80.00m,
                            PaymentDate = new DateTime(2024, 12, 23, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(4998),
                            PaymentType = "CASH",
                            SaleId = 4
                        },
                        new
                        {
                            SalePaymentId = 9,
                            Amount = 200.00m,
                            PaymentDate = new DateTime(2024, 12, 25, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(5000),
                            PaymentType = "CREDIT",
                            SaleId = 5
                        },
                        new
                        {
                            SalePaymentId = 10,
                            Amount = 100.00m,
                            PaymentDate = new DateTime(2025, 1, 2, 23, 27, 46, 938, DateTimeKind.Utc).AddTicks(5002),
                            PaymentType = "PARTIAL_PAYMENT",
                            SaleId = 5
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Shelf", b =>
                {
                    b.Property<int>("ShelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelfId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShelfId");

                    b.ToTable("Shelfs");

                    b.HasData(
                        new
                        {
                            ShelfId = 1,
                            Name = "Shelf 1"
                        },
                        new
                        {
                            ShelfId = 2,
                            Name = "Shelf 2"
                        },
                        new
                        {
                            ShelfId = 3,
                            Name = "Shelf 3"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivate")
                        .HasColumnType("bit");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("SupplierId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Adresse = "123 Supplier Street",
                            City = "City A",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(6173),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(6763),
                            Email = "supplierA@example.com",
                            IsActivate = true,
                            Land = "Country A",
                            ModifiedBy = "Admin",
                            Name = "Supplier A",
                            PhoneNumber1 = "1111111111",
                            PhoneNumber2 = "2222222222"
                        },
                        new
                        {
                            SupplierId = 2,
                            Adresse = "456 Another Street",
                            City = "City B",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7319),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7322),
                            Email = "supplierB@example.com",
                            IsActivate = true,
                            Land = "Country B",
                            ModifiedBy = "Admin",
                            Name = "Supplier B",
                            PhoneNumber1 = "3333333333",
                            PhoneNumber2 = "4444444444"
                        },
                        new
                        {
                            SupplierId = 3,
                            Adresse = "789 Third Avenue",
                            City = "City C",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7329),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7331),
                            Email = "supplierC@example.com",
                            IsActivate = false,
                            Land = "Country C",
                            ModifiedBy = "Admin",
                            Name = "Supplier C",
                            PhoneNumber1 = "5555555555",
                            PhoneNumber2 = "6666666666"
                        },
                        new
                        {
                            SupplierId = 4,
                            Adresse = "1011 Fourth Avenue",
                            City = "City D",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7339),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7341),
                            Email = "supplierD@example.com",
                            IsActivate = true,
                            Land = "Country D",
                            ModifiedBy = "Admin",
                            Name = "Supplier D",
                            PhoneNumber1 = "7777777777",
                            PhoneNumber2 = "8888888888"
                        },
                        new
                        {
                            SupplierId = 5,
                            Adresse = "1213 Fifth Street",
                            City = "City E",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7348),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7350),
                            Email = "supplierE@example.com",
                            IsActivate = false,
                            Land = "Country E",
                            ModifiedBy = "Admin",
                            Name = "Supplier E",
                            PhoneNumber1 = "9999999999",
                            PhoneNumber2 = "1212121212"
                        },
                        new
                        {
                            SupplierId = 6,
                            Adresse = "1415 Sixth Lane",
                            City = "City F",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7356),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7358),
                            Email = "supplierF@example.com",
                            IsActivate = true,
                            Land = "Country F",
                            ModifiedBy = "Admin",
                            Name = "Supplier F",
                            PhoneNumber1 = "3434343434",
                            PhoneNumber2 = "5656565656"
                        },
                        new
                        {
                            SupplierId = 7,
                            Adresse = "1617 Seventh Road",
                            City = "City G",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7365),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7367),
                            Email = "supplierG@example.com",
                            IsActivate = true,
                            Land = "Country G",
                            ModifiedBy = "Admin",
                            Name = "Supplier G",
                            PhoneNumber1 = "7878787878",
                            PhoneNumber2 = "8989898989"
                        },
                        new
                        {
                            SupplierId = 8,
                            Adresse = "1819 Eighth Avenue",
                            City = "City H",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7373),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7406),
                            Email = "supplierH@example.com",
                            IsActivate = false,
                            Land = "Country H",
                            ModifiedBy = "Admin",
                            Name = "Supplier H",
                            PhoneNumber1 = "2323232323",
                            PhoneNumber2 = "4545454545"
                        },
                        new
                        {
                            SupplierId = 9,
                            Adresse = "2021 Ninth Boulevard",
                            City = "City I",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7415),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7417),
                            Email = "supplierI@example.com",
                            IsActivate = true,
                            Land = "Country I",
                            ModifiedBy = "Admin",
                            Name = "Supplier I",
                            PhoneNumber1 = "6767676767",
                            PhoneNumber2 = "8989898989"
                        },
                        new
                        {
                            SupplierId = 10,
                            Adresse = "2223 Tenth Parkway",
                            City = "City J",
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7423),
                            DateModified = new DateTime(2025, 1, 3, 0, 27, 46, 929, DateTimeKind.Local).AddTicks(7425),
                            Email = "supplierJ@example.com",
                            IsActivate = true,
                            Land = "Country J",
                            ModifiedBy = "Admin",
                            Name = "Supplier J",
                            PhoneNumber1 = "1234123412",
                            PhoneNumber2 = "5678567856"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Tax", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxId"));

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TaxId");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            TaxId = 1,
                            TaxRate = 10m
                        },
                        new
                        {
                            TaxId = 2,
                            TaxRate = 20m
                        },
                        new
                        {
                            TaxId = 3,
                            TaxRate = 30m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UnitId");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = 1,
                            Name = "Unit 1"
                        },
                        new
                        {
                            UnitId = 2,
                            Name = "Unit 2"
                        },
                        new
                        {
                            UnitId = 3,
                            Name = "Unit 3"
                        });
                });

            modelBuilder.Entity("InventoryMouvementProduct", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.InventoryMouvement", null)
                        .WithMany()
                        .HasForeignKey("InventoryMouvementsInventoryMouvementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashRegister", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.CashRegister", null)
                        .WithMany("CashRegisters")
                        .HasForeignKey("CashRegisterId1");

                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("CashRegisters")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Location", "Location")
                        .WithMany("CashRegisters")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashShift", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.CashRegister", "CashRegister")
                        .WithMany("CashShifts")
                        .HasForeignKey("CashRegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("CashShifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CashRegister");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashTransaction", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.CashShift", "CashShift")
                        .WithMany("CashTransactions")
                        .HasForeignKey("CashShiftId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CashShift");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Inventory", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Location", "Location")
                        .WithMany("Inventories")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.InventoryMouvement", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Location", "Location")
                        .WithMany("InventoryMouvements")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Product", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Line", "Line")
                        .WithMany("Products")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Shelf", "Shelf")
                        .WithMany("Products")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Tax", "Tax")
                        .WithMany("Products")
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Line");

                    b.Navigation("Shelf");

                    b.Navigation("Tax");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ProductBatch", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("ProductBatches")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Purchase", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("Purchases")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Supplier", "Supplier")
                        .WithMany("Purchases")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchaseItem", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Purchase", "Purchase")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchasePayment", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Purchase", "Purchase")
                        .WithMany("PurchasePayments")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Sale", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("Sales")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SaleItem", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("SaleItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Sale", "Sale")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Tax", null)
                        .WithMany("SaleItems")
                        .HasForeignKey("TaxId");

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SalePayment", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Sale", "Sale")
                        .WithMany("SalePayments")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashRegister", b =>
                {
                    b.Navigation("CashRegisters");

                    b.Navigation("CashShifts");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashShift", b =>
                {
                    b.Navigation("CashTransactions");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Employee", b =>
                {
                    b.Navigation("CashRegisters");

                    b.Navigation("CashShifts");

                    b.Navigation("Purchases");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Line", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Location", b =>
                {
                    b.Navigation("CashRegisters");

                    b.Navigation("Inventories");

                    b.Navigation("InventoryMouvements");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("ProductBatches");

                    b.Navigation("PurchaseItems");

                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Purchase", b =>
                {
                    b.Navigation("PurchaseItems");

                    b.Navigation("PurchasePayments");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Sale", b =>
                {
                    b.Navigation("SaleItems");

                    b.Navigation("SalePayments");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Shelf", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Supplier", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Tax", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Unit", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
