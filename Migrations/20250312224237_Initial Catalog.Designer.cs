// <auto-generated />
using System;
using InventoryTrackApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryTrackApi.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20250312224237_Initial Catalog")]
    partial class InitialCatalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryMouvementProduct", b =>
                {
                    b.Property<int>("InventoryMouvementsInventoryMouvementId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.HasKey("InventoryMouvementsInventoryMouvementId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("InventoryMouvementProduct");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashRegister", b =>
                {
                    b.Property<int>("CashRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashRegisterId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("CashRegisterId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("CashRegisters");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashShift", b =>
                {
                    b.Property<int>("CashShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashShiftId"));

                    b.Property<decimal>("CashIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShiftEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalRefunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CashShiftId");

                    b.HasIndex("CashRegisterId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("CashShifts");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashTransaction", b =>
                {
                    b.Property<int>("CashTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashTransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CashShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashTransactionId");

                    b.HasIndex("CashShiftId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("CashTransactions");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(4681),
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5084),
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 3,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5085),
                            Name = "Groceries"
                        },
                        new
                        {
                            CategoryId = 4,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5086),
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryId = 5,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5087),
                            Name = "Books"
                        },
                        new
                        {
                            CategoryId = 6,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5088),
                            Name = "Sacs"
                        },
                        new
                        {
                            CategoryId = 7,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5089),
                            Name = "Data"
                        },
                        new
                        {
                            CategoryId = 8,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5089),
                            Name = "Bread"
                        },
                        new
                        {
                            CategoryId = 9,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5090),
                            Name = "Jacket"
                        },
                        new
                        {
                            CategoryId = 10,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5091),
                            Name = "T-Shirts"
                        },
                        new
                        {
                            CategoryId = 11,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5092),
                            Name = "Jeans"
                        },
                        new
                        {
                            CategoryId = 12,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(5093),
                            Name = "Mobile"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivate")
                        .HasColumnType("bit");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SaasClientId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.InventoryMouvement", b =>
                {
                    b.Property<int>("InventoryMouvementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryMouvementId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MouvementDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MouvementType")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("InventoryMouvementId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("InventoryMouvements");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 225, DateTimeKind.Utc).AddTicks(9672),
                            Name = "Electronics Line"
                        },
                        new
                        {
                            LineId = 2,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(9),
                            Name = "Clothing Line"
                        },
                        new
                        {
                            LineId = 3,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(10),
                            Name = "Grocery Line"
                        },
                        new
                        {
                            LineId = 4,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(11),
                            Name = "Furniture Line"
                        },
                        new
                        {
                            LineId = 5,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(12),
                            Name = "Toys Line"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("LocationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SaasClientId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBuyThreeForFiveEligible")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecondItemDiscountEligible")
                        .HasColumnType("bit");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PackUnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityPack")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShelfId")
                        .HasColumnType("int");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("Barcode")
                        .IsUnique();

                    b.HasIndex("CategoryId");

                    b.HasIndex("LineId");

                    b.HasIndex("ShelfId");

                    b.HasIndex("TaxId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Barcode = "1234567890123",
                            CategoryId = 1,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 3, 12, 23, 42, 33, 227, DateTimeKind.Local).AddTicks(9777),
                            DateModified = new DateTime(2025, 3, 12, 23, 42, 33, 228, DateTimeKind.Local).AddTicks(1),
                            DiscountPercentage = 0m,
                            ImageUrl = "https://example.com/productA.jpg",
                            IsActivate = true,
                            IsBuyThreeForFiveEligible = false,
                            IsSecondItemDiscountEligible = false,
                            LineId = 1,
                            MaxStock = 100m,
                            MinStock = 10m,
                            ModifiedBy = "Admin",
                            Name = "Product A",
                            PackUnitType = "Box",
                            ProductUnitId = 1,
                            PurchasePrice = 100.00m,
                            QuantityPack = 1m,
                            QuantityStock = 50m,
                            SalePrice1 = 150.00m,
                            SalePrice2 = 160.00m,
                            SalePrice3 = 170.00m,
                            ShelfId = 1,
                            TaxId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            Barcode = "2234567890123",
                            CategoryId = 2,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 3, 12, 23, 42, 33, 228, DateTimeKind.Local).AddTicks(624),
                            DateModified = new DateTime(2025, 3, 12, 23, 42, 33, 228, DateTimeKind.Local).AddTicks(626),
                            DiscountPercentage = 0m,
                            ImageUrl = "https://example.com/productB.jpg",
                            IsActivate = true,
                            IsBuyThreeForFiveEligible = false,
                            IsSecondItemDiscountEligible = false,
                            LineId = 2,
                            MaxStock = 5m,
                            MinStock = 5m,
                            ModifiedBy = "Admin",
                            Name = "Product B",
                            PackUnitType = "Piece",
                            ProductUnitId = 2,
                            PurchasePrice = 50.00m,
                            QuantityPack = 1m,
                            QuantityStock = 30m,
                            SalePrice1 = 70.00m,
                            SalePrice2 = 75.00m,
                            SalePrice3 = 80.00m,
                            ShelfId = 2,
                            TaxId = 2,
                            UnitId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            Barcode = "3234567890123",
                            CategoryId = 3,
                            CreatedBy = "Admin",
                            DateCreated = new DateTime(2025, 3, 12, 23, 42, 33, 228, DateTimeKind.Local).AddTicks(635),
                            DateModified = new DateTime(2025, 3, 12, 23, 42, 33, 228, DateTimeKind.Local).AddTicks(636),
                            DiscountPercentage = 0m,
                            ImageUrl = "https://example.com/productC.jpg",
                            IsActivate = true,
                            IsBuyThreeForFiveEligible = false,
                            IsSecondItemDiscountEligible = false,
                            LineId = 3,
                            MaxStock = 5m,
                            MinStock = 5m,
                            ModifiedBy = "Admin",
                            Name = "Product C",
                            PackUnitType = "Piece",
                            ProductUnitId = 3,
                            PurchasePrice = 200.00m,
                            QuantityPack = 1m,
                            QuantityStock = 60m,
                            SalePrice1 = 250.00m,
                            SalePrice2 = 260.00m,
                            SalePrice3 = 270.00m,
                            ShelfId = 3,
                            TaxId = 3,
                            UnitId = 3
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ProductBatch", b =>
                {
                    b.Property<int>("ProductBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductBatchId"));

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductBatchId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBatchs");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TvaAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SaasClientId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchaseItem", b =>
                {
                    b.Property<int>("PurchaseItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseItemId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchasePayment", b =>
                {
                    b.Property<int>("PurchasePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchasePaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("PurchasePaymentId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("purchasePayments");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Return", b =>
                {
                    b.Property<int>("ReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReturnId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReturnMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReturnId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SaasClientId");

                    b.HasIndex("SaleId");

                    b.ToTable("Return");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ReturnItem", b =>
                {
                    b.Property<int>("ReturnItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReturnItemId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProfitMarge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReturnId")
                        .HasColumnType("int");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReturnItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReturnId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("ReturnItem");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ReturnPayment", b =>
                {
                    b.Property<int>("ReturnPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReturnPaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReturnId")
                        .HasColumnType("int");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("ReturnPaymentId");

                    b.HasIndex("ReturnId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("ReturnPayment");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SaasClient", b =>
                {
                    b.Property<int>("SaasClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaasClientId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubscriptionExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SaasClientId");

                    b.ToTable("SaasClients");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TvaAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SaasClientId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SaleItem", b =>
                {
                    b.Property<int>("SaleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleItemId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProfitMarge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaleItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaasClientId");

                    b.HasIndex("SaleId");

                    b.HasIndex("TaxId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SalePayment", b =>
                {
                    b.Property<int>("SalePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalePaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("SalePaymentId");

                    b.HasIndex("SaasClientId");

                    b.HasIndex("SaleId");

                    b.ToTable("SalePayments");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Shelf", b =>
                {
                    b.Property<int>("ShelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelfId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShelfId");

                    b.ToTable("Shelfs");

                    b.HasData(
                        new
                        {
                            ShelfId = 1,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(451),
                            Name = "Shelf 1"
                        },
                        new
                        {
                            ShelfId = 2,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(680),
                            Name = "Shelf 2"
                        },
                        new
                        {
                            ShelfId = 3,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(681),
                            Name = "Shelf 3"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivate")
                        .HasColumnType("bit");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SaasClientId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Tax", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TaxId");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            TaxId = 1,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(1088),
                            TaxRate = 10m
                        },
                        new
                        {
                            TaxId = 2,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(1381),
                            TaxRate = 20m
                        },
                        new
                        {
                            TaxId = 3,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(1400),
                            TaxRate = 30m
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UnitId");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = 1,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(1745),
                            Name = "Unit 1"
                        },
                        new
                        {
                            UnitId = 2,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(1956),
                            Name = "Unit 2"
                        },
                        new
                        {
                            UnitId = 3,
                            DateCreated = new DateTime(2025, 3, 12, 22, 42, 33, 226, DateTimeKind.Utc).AddTicks(1957),
                            Name = "Unit 3"
                        });
                });

            modelBuilder.Entity("InventoryTrackApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaasClientId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SaasClientId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InventoryMouvementProduct", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.InventoryMouvement", null)
                        .WithMany()
                        .HasForeignKey("InventoryMouvementsInventoryMouvementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashRegister", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("CashRegisters")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Location", "Location")
                        .WithMany("CashRegisters")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("CashRegisters")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Location");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashShift", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.CashRegister", "CashRegister")
                        .WithMany("CashShifts")
                        .HasForeignKey("CashRegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("CashShifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("CashShifts")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashRegister");

                    b.Navigation("Employee");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashTransaction", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.CashShift", "CashShift")
                        .WithMany("CashTransactions")
                        .HasForeignKey("CashShiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("CashTransactions")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashShift");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Customer", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Customers")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Employee", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Employees")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Inventory", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Location", "Location")
                        .WithMany("Inventories")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Inventories")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Product");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.InventoryMouvement", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Location", "Location")
                        .WithMany("InventoryMouvements")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("InventoryMouvements")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Location", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Locations")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Product", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Line", "Line")
                        .WithMany("Products")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Shelf", "Shelf")
                        .WithMany("Products")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Tax", "Tax")
                        .WithMany("Products")
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Line");

                    b.Navigation("Shelf");

                    b.Navigation("Tax");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ProductBatch", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("ProductBatches")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Purchase", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("Purchases")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Purchases")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Supplier", "Supplier")
                        .WithMany("Purchases")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SaasClient");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchaseItem", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Purchase", "Purchase")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.PurchasePayment", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Purchase", "Purchase")
                        .WithMany("PurchasePayments")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("PurchasePayments")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Return", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Customer", "Customer")
                        .WithMany("Returns")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("Returns")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Returns")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Sale", "Sale")
                        .WithMany("Returns")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("SaasClient");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ReturnItem", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("ReturnItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Return", "Return")
                        .WithMany("ReturnItems")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("ReturnItems")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Return");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.ReturnPayment", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Return", "Return")
                        .WithMany("ReturnPayments")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("ReturnPayments")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Return");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Sale", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Employee", "Employee")
                        .WithMany("Sales")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Sales")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SaleItem", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.Product", "Product")
                        .WithMany("SaleItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Sale", "Sale")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Tax", null)
                        .WithMany("SaleItems")
                        .HasForeignKey("TaxId");

                    b.Navigation("Product");

                    b.Navigation("SaasClient");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SalePayment", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("SalePayments")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTrackApi.Models.Sale", "Sale")
                        .WithMany("SalePayments")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SaasClient");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Supplier", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Suppliers")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.User", b =>
                {
                    b.HasOne("InventoryTrackApi.Models.SaasClient", "SaasClient")
                        .WithMany("Users")
                        .HasForeignKey("SaasClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaasClient");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashRegister", b =>
                {
                    b.Navigation("CashShifts");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.CashShift", b =>
                {
                    b.Navigation("CashTransactions");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Customer", b =>
                {
                    b.Navigation("Returns");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Employee", b =>
                {
                    b.Navigation("CashRegisters");

                    b.Navigation("CashShifts");

                    b.Navigation("Purchases");

                    b.Navigation("Returns");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Line", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Location", b =>
                {
                    b.Navigation("CashRegisters");

                    b.Navigation("Inventories");

                    b.Navigation("InventoryMouvements");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("ProductBatches");

                    b.Navigation("PurchaseItems");

                    b.Navigation("ReturnItems");

                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Purchase", b =>
                {
                    b.Navigation("PurchaseItems");

                    b.Navigation("PurchasePayments");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Return", b =>
                {
                    b.Navigation("ReturnItems");

                    b.Navigation("ReturnPayments");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.SaasClient", b =>
                {
                    b.Navigation("CashRegisters");

                    b.Navigation("CashShifts");

                    b.Navigation("CashTransactions");

                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("Inventories");

                    b.Navigation("InventoryMouvements");

                    b.Navigation("Locations");

                    b.Navigation("PurchaseItems");

                    b.Navigation("PurchasePayments");

                    b.Navigation("Purchases");

                    b.Navigation("ReturnItems");

                    b.Navigation("ReturnPayments");

                    b.Navigation("Returns");

                    b.Navigation("SaleItems");

                    b.Navigation("SalePayments");

                    b.Navigation("Sales");

                    b.Navigation("Suppliers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Sale", b =>
                {
                    b.Navigation("Returns");

                    b.Navigation("SaleItems");

                    b.Navigation("SalePayments");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Shelf", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Supplier", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Tax", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("InventoryTrackApi.Models.Unit", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
